{
    "name": "speech-to-text-stt",
    "displayName": "Speech To Text STT",
    "description": "Speech to text integration using State of the Art Models",
    "version": "0.0.8",
    "publisher": "asifmohammed",
    "icon": "media/icon.png",
    "author": {
        "name": "asif",
        "email": "asif18061996@gmail.com"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/asifmd1806/vscode-stt-extension.git"
    },
    "extensionKind": [
        "ui"
    ],
    "engines": {
        "vscode": "^1.96.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "stt-sidebar",
                    "title": "Speech To Text STT",
                    "icon": "media/icon.svg"
                }
            ]
        },
        "views": {
            "stt-sidebar": [
                {
                    "id": "sttView",
                    "name": "Recorder"
                }
            ]
        },
        "commands": [
            {
                "command": "speech-to-text-stt.selectMicrophone",
                "title": "Select Microphone",
                "category": "Speech To Text"
            },
            {
                "command": "speech-to-text-stt.startRecording",
                "title": "Start Recording",
                "category": "Speech To Text"
            },
            {
                "command": "speech-to-text-stt.stopRecordingAndTranscribe",
                "title": "Stop Recording & Transcribe",
                "category": "Speech To Text"
            },
            {
                "command": "speech-to-text-stt.clearHistory",
                "title": "Clear Transcription History",
                "category": "Speech To Text"
            },
            {
                "command": "speech-to-text-stt.copyHistoryItem",
                "title": "Copy Transcription",
                "category": "Speech To Text"
            },
            {
                "command": "speech-to-text-stt.viewSavedRecordings",
                "title": "View Saved Recordings",
                "category": "Speech To Text"
            }
        ],
        "configuration": {
            "title": "Speech To Text STT",
            "properties": {
                "speech-to-text-stt.transcriptionProvider": {
                    "type": "string",
                    "enum": [
                        "elevenlabs",
                        "openai",
                        "groq",
                        "google"
                    ],
                    "default": "elevenlabs",
                    "description": "Select the transcription provider to use.",
                    "scope": "window"
                },
                "speech-to-text-stt.elevenlabs": {
                    "type": "object",
                    "title": "ElevenLabs Settings",
                    "properties": {
                        "apiKey": {
                            "type": "string",
                            "description": "Your ElevenLabs API key for transcription.",
                            "scope": "window",
                            "markdownDescription": "Enter your ElevenLabs API key. You can get one from [ElevenLabs website](https://elevenlabs.io/). This is stored securely."
                        },
                        "modelId": {
                            "type": "string",
                            "default": "scribe_v1",
                            "description": "The ElevenLabs model ID to use for transcription (e.g., scribe_v1).",
                            "scope": "window"
                        },
                        "languageCode": {
                            "type": "string",
                            "description": "(Optional) The BCP-47 language code of the audio (e.g., en, es, fr). Leave empty for auto-detection.",
                            "scope": "window"
                        },
                        "numSpeakers": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "(Optional) Number of speakers expected in the audio (1-32). Leave empty or set to 0 for auto-detection.",
                            "scope": "window",
                            "minimum": 0,
                            "maximum": 32
                        }
                    }
                },
                "speech-to-text-stt.openai": {
                    "type": "object",
                    "title": "OpenAI Whisper Settings",
                    "properties": {
                        "apiKey": {
                            "type": "string",
                            "description": "Your OpenAI API key.",
                            "scope": "window",
                            "markdownDescription": "Enter your OpenAI API key. You can get one from [OpenAI platform](https://platform.openai.com/). This is stored securely."
                        },
                        "modelId": {
                            "type": "string",
                            "default": "gpt-4o-transcribe",
                            "description": "The OpenAI Whisper model ID to use (e.g., gpt-4o-transcribe).",
                            "scope": "window"
                        },
                        "language": {
                            "type": "string",
                            "description": "(Optional) The language of the input audio in ISO-639-1 format (e.g., en, es, fr). Improves accuracy.",
                            "scope": "window"
                        },
                        "prompt": {
                            "type": "string",
                            "description": "(Optional) Text to guide the model's style or continue a previous audio segment.",
                            "scope": "window"
                        },
                        "temperature": {
                            "type": [
                                "number",
                                "null"
                            ],
                            "minimum": 0,
                            "maximum": 1,
                            "description": "(Optional) Sampling temperature (0-1). Higher values = more random, lower = more deterministic. Default is 0.",
                            "scope": "window"
                        }
                    }
                },
                "speech-to-text-stt.groq": {
                    "type": "object",
                    "title": "Groq Whisper Settings",
                    "properties": {
                        "apiKey": {
                            "type": "string",
                            "description": "Your Groq API key.",
                            "scope": "window",
                            "markdownDescription": "Enter your Groq API key. You can get one from [Groq Console](https://console.groq.com/keys). This is stored securely."
                        },
                        "modelId": {
                            "type": "string",
                            "default": "whisper-large-v3-turbo",
                            "description": "The Groq Whisper model ID (e.g., whisper-large-v3-turbo, whisper-large-v3).",
                            "scope": "window"
                        },
                        "language": {
                            "type": "string",
                            "description": "(Optional) The language of the input audio in ISO-639-1 format (e.g., en, es, fr). Improves accuracy.",
                            "scope": "window"
                        },
                        "prompt": {
                            "type": "string",
                            "description": "(Optional) Text to guide the model's style.",
                            "scope": "window"
                        },
                        "temperature": {
                            "type": [
                                "number",
                                "null"
                            ],
                            "minimum": 0,
                            "maximum": 1,
                            "description": "(Optional) Sampling temperature (0-1). Default is 0.",
                            "scope": "window"
                        }
                    }
                },
                "speech-to-text-stt.google": {
                    "type": "object",
                    "title": "Google Cloud Speech-to-Text Settings",
                    "properties": {
                        "credentialsPath": {
                            "type": "string",
                            "description": "Path to your Google Cloud service account credentials JSON file.",
                            "scope": "window",
                            "markdownDescription": "Enter the full path to your Google Cloud service account credentials JSON file. You can create one from [Google Cloud Console](https://console.cloud.google.com/). This is stored securely."
                        },
                        "projectId": {
                            "type": "string",
                            "description": "Your Google Cloud Project ID.",
                            "scope": "window"
                        },
                        "languageCode": {
                            "type": "string",
                            "default": "en-US",
                            "description": "The language code for speech recognition (e.g., en-US, es-ES, fr-FR).",
                            "scope": "window"
                        },
                        "encoding": {
                            "type": "string",
                            "default": "WEBM_OPUS",
                            "description": "Audio encoding format (e.g., WEBM_OPUS, LINEAR16, FLAC).",
                            "scope": "window"
                        },
                        "sampleRateHertz": {
                            "type": "integer",
                            "default": 16000,
                            "description": "Sample rate in Hz (e.g., 16000, 44100).",
                            "scope": "window"
                        },
                        "model": {
                            "type": "string",
                            "default": "chirp",
                            "description": "The Google Speech model to use (e.g., chirp, latest_long, latest_short).",
                            "scope": "window"
                        },
                        "alternativeLanguageCodes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "(Optional) Alternative language codes for multilingual recognition.",
                            "scope": "window"
                        },
                        "maxAlternatives": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 30,
                            "description": "(Optional) Maximum number of recognition alternatives (1-30).",
                            "scope": "window"
                        },
                        "profanityFilter": {
                            "type": "boolean",
                            "description": "(Optional) Enable profanity filtering.",
                            "scope": "window"
                        },
                        "enableWordTimeOffsets": {
                            "type": "boolean",
                            "description": "(Optional) Enable word-level time offsets.",
                            "scope": "window"
                        },
                        "enableAutomaticPunctuation": {
                            "type": "boolean",
                            "default": true,
                            "description": "(Optional) Enable automatic punctuation.",
                            "scope": "window"
                        },
                        "useEnhanced": {
                            "type": "boolean",
                            "description": "(Optional) Use enhanced model for better accuracy (may incur additional costs).",
                            "scope": "window"
                        }
                    }
                },
                "speech-to-text-stt.copyToClipboardAfterTranscription": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically copy the transcribed text to the clipboard after processing.",
                    "scope": "window"
                },
                "speech-to-text-stt.insertIntoEditorAfterTranscription": {
                    "type": "boolean",
                    "default": false,
                    "description": "Automatically insert the transcribed text into the active editor at the cursor position.",
                    "scope": "window"
                }
            }
        },
        "menus": {
            "view/title": [
                {
                    "command": "speech-to-text-stt.clearHistory",
                    "when": "view == sttView",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "speech-to-text-stt.copyHistoryItem",
                    "when": "view == sttView && viewItem == historyItem",
                    "group": "inline"
                },
                {
                    "command": "speech-to-text-stt.clearHistory",
                    "when": "view == sttView && viewItem == transcriptionHistoryHeader",
                    "group": "navigation@1"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production --devtool hidden-source-map",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "vscode-test"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.10",
        "@types/node": "20.x",
        "@types/vscode": "^1.96.0",
        "@typescript-eslint/eslint-plugin": "^8.28.0",
        "@typescript-eslint/parser": "^8.28.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "copy-webpack-plugin": "^13.0.0",
        "eslint": "^9.23.0",
        "ts-loader": "^9.5.2",
        "typescript": "^5.8.2",
        "webpack": "^5.99.7",
        "webpack-cli": "^6.0.1"
    },
    "dependencies": {
        "@google-cloud/speech": "^7.1.0",
        "date-fns": "^4.1.0",
        "elevenlabs": "^1.57.0",
        "openai": "^4.0.0",
        "play-sound": "^1.1.6",
        "wavefile": "^11.0.0"
    }
}
